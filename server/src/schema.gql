# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type CallUp {
  createdAt: DateTime!
  createdBy: User!
  createdById: String!
  description: String
  id: ID!
  isOpen: Boolean!
  location: String
  matchDate: DateTime!
  maxPlayers: Int
  responses: [CallUpResponse!]!
  title: String!
  updatedAt: DateTime!
}

type CallUpResponse {
  callUp: CallUp!
  callUpId: String!
  createdAt: DateTime!
  id: ID!
  message: String
  position: Int!
  user: User!
  userId: String!
}

input CreateCallUpInput {
  createdById: String!
  description: String
  location: String
  matchDate: String!
  maxPlayers: Int
  title: String!
}

input CreateUserInput {
  email: String!
  name: String!
  nickname: String
  password: String!
  position: Position
  role: UserRole
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input JoinCallUpInput {
  callUpId: String!
  message: String
  userId: String!
}

type Mutation {
  closeCallUp(id: String!): CallUp!
  createCallUp(data: CreateCallUpInput!): CallUp!
  createUser(data: CreateUserInput!): User!
  deleteCallUp(id: String!): Boolean!
  deleteUser(id: String!): Boolean!
  joinCallUp(data: JoinCallUpInput!): CallUp!
  leaveCallUp(callUpId: String!, userId: String!): CallUp!
  makeUserAdmin(userId: String!): User!
  updateCallUp(data: UpdateCallUpInput!, id: String!): CallUp!
  updateUser(data: UpdateUserInput!, id: String!): User!
}

"""Las posiciones disponibles para los jugadores"""
enum Position {
  DEFENDER
  FORWARD
  GOALKEEPER
  MIDFIELDER
}

type Query {
  activeCallUps: [CallUp!]!
  admins: [User!]!
  callUp(id: String!): CallUp
  callUps: [CallUp!]!
  isAdmin(userId: String!): Boolean!
  user(id: String!): User
  users: [User!]!
}

input UpdateCallUpInput {
  description: String
  isOpen: Boolean
  location: String
  matchDate: String
  maxPlayers: Int
  title: String
}

input UpdateUserInput {
  isActive: Boolean
  name: String
  nickname: String
  position: Position
  role: UserRole
}

type User {
  createdAt: DateTime!
  email: String!
  id: ID!
  isActive: Boolean!
  name: String!
  nickname: String
  position: Position
  role: UserRole!
  updatedAt: DateTime!
}

"""Los roles disponibles para los usuarios"""
enum UserRole {
  ADMIN
  MANAGER
  VIEWER
}